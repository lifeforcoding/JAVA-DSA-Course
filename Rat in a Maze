import java.util.ArrayList;

public class TrappingRainWater {
    public static void main(String[] args) {
        int[][] m = {{1, 0, 0, 0},
                     {1, 1, 0, 1},
                     {1, 1, 0, 0},
                     {0, 1, 1, 1}};
        int n = 4;
        ArrayList<String> s1 = findPath(m, n);
    }
    public static ArrayList<String> findPath(int[][] arr, int n) {
        ArrayList<String> ans = new ArrayList<>();
        int[][] visited = new int[n][n];
        solve(arr, 0, 0, ans, visited);

        return ans;
    }
    public static void solve(int[][] arr, int row, int col, ArrayList<String> ans, int[][] visited) {
        if (row == arr.length && col == arr.length - 1) {
            //addAns(ans, visited);
            for (int[] e : visited) {
                for (int f : e)
                    System.out.print(f + " ");
                System.out.println();
            }
            return;
        }
        if (col == arr.length || row == arr.length || arr[row][col] == 0 || visited[row][col] == 1)
            return;
        visited[row][col] = 1;
        solve(arr,row + 1, col, ans, visited);
        solve(arr, row, col + 1, ans, visited);
        visited[row][col] = 0;
    }

//    public static void addAns(ArrayList<String> ans, int[][] visited) {
//        String s = "";
//        for (int[] e : visited) {
//            for (int f : e) {
//                if (f == 1)
//                    s += "R";
//            }
//            s += "D";
//        }
//        ans.add(s);
//    }
}
